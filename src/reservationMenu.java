/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Muhammad Azizi
 */
import java.awt.HeadlessException;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
public class reservationMenu extends javax.swing.JFrame {

    /**
     * Creates new form reservationMenu
     */
    String name, address, phone, email, icNum, date, month, year, newDate, time, boatID, boatSeries, seatID, revID;
    double totalPayment;
    
    boolean errorName;
    boolean errorAddress;
    boolean errorPhone;
    boolean errorEmail;
    boolean errorICNumber;
    boolean errorSeat;
    boolean errorDate, errorMonth, errorYear, errorTime;

    public reservationMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        txtPhone = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtIDNum = new javax.swing.JTextField();
        cmbDate = new javax.swing.JComboBox<>();
        cmbMonth = new javax.swing.JComboBox<>();
        cmbYear = new javax.swing.JComboBox<>();
        cmbTime = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        cbA1 = new javax.swing.JCheckBox();
        cbB1 = new javax.swing.JCheckBox();
        cbC1 = new javax.swing.JCheckBox();
        cbD1 = new javax.swing.JCheckBox();
        cbE1 = new javax.swing.JCheckBox();
        cbF1 = new javax.swing.JCheckBox();
        cbA2 = new javax.swing.JCheckBox();
        cbB2 = new javax.swing.JCheckBox();
        cbC2 = new javax.swing.JCheckBox();
        cbD2 = new javax.swing.JCheckBox();
        cbE2 = new javax.swing.JCheckBox();
        cbF2 = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lblA1 = new javax.swing.JLabel();
        lblB1 = new javax.swing.JLabel();
        lblC1 = new javax.swing.JLabel();
        lblD1 = new javax.swing.JLabel();
        lblE1 = new javax.swing.JLabel();
        lblF1 = new javax.swing.JLabel();
        lblA2 = new javax.swing.JLabel();
        lblB2 = new javax.swing.JLabel();
        lblC2 = new javax.swing.JLabel();
        lblD2 = new javax.swing.JLabel();
        lblE2 = new javax.swing.JLabel();
        lblF2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lblDisplay = new javax.swing.JLabel();
        lblDisplaySeat = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnPayment = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Reservation Menu");
        setMaximumSize(new java.awt.Dimension(1110, 700));
        setMinimumSize(new java.awt.Dimension(1110, 700));
        setPreferredSize(new java.awt.Dimension(1110, 700));
        setResizable(false);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/reservationBG.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 1115, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Customer and Booking Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Baby Superhero", 0, 24))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Baby Superhero", 0, 24)); // NOI18N
        jLabel1.setText("Name: ");

        jLabel2.setFont(new java.awt.Font("Baby Superhero", 0, 24)); // NOI18N
        jLabel2.setText("Address: ");

        jLabel3.setFont(new java.awt.Font("Baby Superhero", 0, 24)); // NOI18N
        jLabel3.setText("Phone: ");

        jLabel4.setFont(new java.awt.Font("Baby Superhero", 0, 24)); // NOI18N
        jLabel4.setText("Email: ");

        jLabel5.setFont(new java.awt.Font("Baby Superhero", 0, 24)); // NOI18N
        jLabel5.setText("IC Number: ");

        jLabel6.setFont(new java.awt.Font("Baby Superhero", 0, 24)); // NOI18N
        jLabel6.setText("Date: ");

        jLabel7.setFont(new java.awt.Font("Baby Superhero", 0, 24)); // NOI18N
        jLabel7.setText("Time: ");

        txtAddress.setColumns(20);
        txtAddress.setRows(3);
        jScrollPane1.setViewportView(txtAddress);

        cmbDate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Date", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        cmbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        cmbYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "2017" }));

        cmbTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour", "8.00 AM", "9.00 AM", "10.00 AM", "11.00 AM", "12.00 PM", "1.00 PM", "2.00 PM", "3.00 PM" }));
        cmbTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTimeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtName)
                    .addComponent(jScrollPane1)
                    .addComponent(txtPhone)
                    .addComponent(txtEmail)
                    .addComponent(txtIDNum)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(cmbDate, 0, 91, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmbTime, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPhone))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtEmail))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtIDNum))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbYear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(cmbDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbTime, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Seat Selection", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Baby Superhero", 0, 24))); // NOI18N
        jPanel3.setLayout(null);

        cbA1.setText("A1");
        cbA1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbA1ActionPerformed(evt);
            }
        });
        jPanel3.add(cbA1);
        cbA1.setBounds(40, 180, 50, 25);

        cbB1.setText("B1");
        cbB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbB1ActionPerformed(evt);
            }
        });
        jPanel3.add(cbB1);
        cbB1.setBounds(40, 210, 50, 25);

        cbC1.setText("C1");
        cbC1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbC1ActionPerformed(evt);
            }
        });
        jPanel3.add(cbC1);
        cbC1.setBounds(40, 240, 50, 25);

        cbD1.setText("D1");
        cbD1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbD1ActionPerformed(evt);
            }
        });
        jPanel3.add(cbD1);
        cbD1.setBounds(40, 270, 50, 25);

        cbE1.setText("E1");
        cbE1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbE1ActionPerformed(evt);
            }
        });
        jPanel3.add(cbE1);
        cbE1.setBounds(40, 300, 50, 25);

        cbF1.setText("F1");
        cbF1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbF1ActionPerformed(evt);
            }
        });
        jPanel3.add(cbF1);
        cbF1.setBounds(40, 330, 50, 25);

        cbA2.setText("A2");
        cbA2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbA2ActionPerformed(evt);
            }
        });
        jPanel3.add(cbA2);
        cbA2.setBounds(210, 180, 50, 25);

        cbB2.setText("B2");
        cbB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbB2ActionPerformed(evt);
            }
        });
        jPanel3.add(cbB2);
        cbB2.setBounds(210, 210, 50, 25);

        cbC2.setText("C2");
        cbC2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbC2ActionPerformed(evt);
            }
        });
        jPanel3.add(cbC2);
        cbC2.setBounds(210, 240, 50, 25);

        cbD2.setText("D2");
        cbD2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbD2ActionPerformed(evt);
            }
        });
        jPanel3.add(cbD2);
        cbD2.setBounds(210, 270, 50, 25);

        cbE2.setText("E2");
        cbE2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbE2ActionPerformed(evt);
            }
        });
        jPanel3.add(cbE2);
        cbE2.setBounds(210, 300, 50, 25);

        cbF2.setText("F2");
        cbF2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbF2ActionPerformed(evt);
            }
        });
        jPanel3.add(cbF2);
        cbF2.setBounds(210, 330, 50, 25);

        jLabel8.setFont(new java.awt.Font("Baby Superhero", 0, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Boat Captain");
        jPanel3.add(jLabel8);
        jLabel8.setBounds(100, 360, 100, 31);

        jLabel11.setFont(new java.awt.Font("Baby Superhero", 0, 24)); // NOI18N
        jLabel11.setText("Ticket Price: ");
        jPanel3.add(jLabel11);
        jLabel11.setBounds(160, 40, 120, 29);

        jLabel12.setFont(new java.awt.Font("Baby Superhero", 0, 18)); // NOI18N
        jLabel12.setText("RM 20");
        jPanel3.add(jLabel12);
        jLabel12.setBounds(220, 70, 50, 20);

        jLabel13.setText("Legend: ");
        jPanel3.add(jLabel13);
        jLabel13.setBounds(90, 410, 60, 16);

        jLabel14.setForeground(new java.awt.Color(255, 0, 51));
        jLabel14.setText("Occupied [0]");
        jPanel3.add(jLabel14);
        jLabel14.setBounds(150, 410, 80, 16);

        lblA1.setForeground(new java.awt.Color(255, 0, 51));
        lblA1.setText("[0]");
        jPanel3.add(lblA1);
        lblA1.setBounds(110, 180, 20, 16);

        lblB1.setForeground(new java.awt.Color(255, 0, 51));
        lblB1.setText("[0]");
        jPanel3.add(lblB1);
        lblB1.setBounds(110, 210, 20, 16);

        lblC1.setForeground(new java.awt.Color(255, 0, 51));
        lblC1.setText("[0]");
        jPanel3.add(lblC1);
        lblC1.setBounds(110, 240, 20, 16);

        lblD1.setForeground(new java.awt.Color(255, 0, 51));
        lblD1.setText("[0]");
        jPanel3.add(lblD1);
        lblD1.setBounds(110, 270, 20, 16);

        lblE1.setForeground(new java.awt.Color(255, 0, 51));
        lblE1.setText("[0]");
        jPanel3.add(lblE1);
        lblE1.setBounds(110, 300, 17, 16);

        lblF1.setForeground(new java.awt.Color(255, 0, 51));
        lblF1.setText("[0]");
        jPanel3.add(lblF1);
        lblF1.setBounds(110, 330, 20, 16);

        lblA2.setForeground(new java.awt.Color(255, 0, 51));
        lblA2.setText("[0]");
        jPanel3.add(lblA2);
        lblA2.setBounds(180, 180, 20, 16);

        lblB2.setForeground(new java.awt.Color(255, 0, 51));
        lblB2.setText("[0]");
        jPanel3.add(lblB2);
        lblB2.setBounds(180, 210, 20, 16);

        lblC2.setForeground(new java.awt.Color(255, 0, 51));
        lblC2.setText("[0]");
        jPanel3.add(lblC2);
        lblC2.setBounds(180, 240, 20, 16);

        lblD2.setForeground(new java.awt.Color(255, 0, 51));
        lblD2.setText("[0]");
        jPanel3.add(lblD2);
        lblD2.setBounds(180, 270, 20, 16);

        lblE2.setForeground(new java.awt.Color(255, 0, 51));
        lblE2.setText("[0]");
        jPanel3.add(lblE2);
        lblE2.setBounds(180, 300, 17, 16);

        lblF2.setForeground(new java.awt.Color(255, 0, 51));
        lblF2.setText("[0]");
        jPanel3.add(lblF2);
        lblF2.setBounds(180, 330, 20, 16);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/boatLayout.png"))); // NOI18N
        jPanel3.add(jLabel9);
        jLabel9.setBounds(100, 40, 130, 400);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Price & Payment", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Baby Superhero", 0, 24))); // NOI18N

        lblDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDisplay.setText("Please Select Ticket");
        lblDisplay.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        lblDisplaySeat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDisplaySeat.setToolTipText("");
        lblDisplaySeat.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(lblDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(lblDisplaySeat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDisplaySeat, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(204, Short.MAX_VALUE))
        );

        btnBack.setText("Back");
        btnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBackMouseClicked(evt);
            }
        });

        btnPayment.setText("Payment");
        btnPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaymentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPayment)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnPayment))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseClicked
        
        dispose();
        
        mainMenu main = new mainMenu();
        main.setVisible(true);
        main.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnBackMouseClicked

    private void cmbTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTimeActionPerformed
        
        name = txtName.getText();
        address = txtAddress.getText();
        phone = txtPhone.getText();
        email = txtEmail.getText();
        icNum = txtIDNum.getText();
        date = cmbDate.getSelectedItem().toString();
        month = cmbMonth.getSelectedItem().toString();
        year = cmbYear.getSelectedItem().toString(); 
        time = cmbTime.getSelectedItem().toString();
        
        newDate = date + " " + month + " " + year;
        
        clearCheckSeat();
        displayPreBook();
        
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost/islandhopping","root","")) 
            {
                Statement stmt = con.createStatement();
                
                ResultSet rs1 = stmt.executeQuery("SELECT * FROM boat WHERE boatDate = '" + newDate + "' AND boatTime = '" + time + "'");
                
                if(rs1.next())
                {
                    boatID = rs1.getString(1);
                    boatSeries = rs1.getString(2);
                
                    Statement stmt2 = con.createStatement();
                    ResultSet rs2 = stmt2.executeQuery("SELECT * FROM seat WHERE boatID = '" + rs1.getString(1) + "'");
                    
                    while(rs2.next())
                    {
                        seatID = rs1.getString(1);
                        
                        if(rs2.getString(3).equalsIgnoreCase("0"))
                        {
                            cbA1.setVisible(true);
                            lblA1.setVisible(false);
                        }
                        else
                        {
                            cbA1.setVisible(false);
                            lblA1.setVisible(true);
                        }
                        
                        if(rs2.getString(4).equalsIgnoreCase("0"))
                        {
                            cbA2.setVisible(true);
                            lblA2.setVisible(false);
                        }
                        else
                        {
                            cbA2.setVisible(false);
                            lblA2.setVisible(true);
                        }
                        
                        if(rs2.getString(5).equalsIgnoreCase("0"))
                        {
                            cbB1.setVisible(true);
                            lblB1.setVisible(false);
                        }
                        else
                        {
                            cbB1.setVisible(false);
                            lblB1.setVisible(true);
                        }
                        
                        if(rs2.getString(6).equalsIgnoreCase("0"))
                        {
                            cbB2.setVisible(true);
                            lblB2.setVisible(false);
                        }
                        else
                        {
                            cbB2.setVisible(false);
                            lblB2.setVisible(true);
                        }
                        
                        if(rs2.getString(7).equalsIgnoreCase("0"))
                        {
                            cbC1.setVisible(true);
                            lblC1.setVisible(false);
                        }
                        else
                        {
                            cbC1.setVisible(false);
                            lblC1.setVisible(true);
                        }
                        
                        if(rs2.getString(8).equalsIgnoreCase("0"))
                        {
                            cbC2.setVisible(true);
                            lblC2.setVisible(false);
                        }
                        else
                        {
                            cbC2.setVisible(false);
                            lblC2.setVisible(true);
                        }
                        
                        if(rs2.getString(9).equalsIgnoreCase("0"))
                        {
                            cbD1.setVisible(true);
                            lblD1.setVisible(false);
                        }
                        else
                        {
                            cbD1.setVisible(false);
                            lblD1.setVisible(true);
                        }
                        
                        if(rs2.getString(10).equalsIgnoreCase("0"))
                        {
                            cbD2.setVisible(true);
                            lblD2.setVisible(false);
                        }
                        else
                        {
                            cbD2.setVisible(false);
                            lblD2.setVisible(true);
                        }
                        
                        if(rs2.getString(11).equalsIgnoreCase("0"))
                        {
                            cbE1.setVisible(true);
                            lblE1.setVisible(false);
                        }
                        else
                        {
                            cbE1.setVisible(false);
                            lblE1.setVisible(true);
                        }
                        
                        if(rs2.getString(12).equalsIgnoreCase("0"))
                        {
                            cbE2.setVisible(true);
                            lblE2.setVisible(false);
                        }
                        else
                        {
                            cbE2.setVisible(false);
                            lblE2.setVisible(true);
                        }
                        
                        if(rs2.getString(13).equalsIgnoreCase("0"))
                        {
                            cbF1.setVisible(true);
                            lblF1.setVisible(false);
                        }
                        else
                        {
                            cbF1.setVisible(false);
                            lblF1.setVisible(true);
                        }
                        
                        if(rs2.getString(14).equalsIgnoreCase("0"))
                        {
                            cbF2.setVisible(true);
                            lblF2.setVisible(false);
                        }
                        else
                        {
                            cbF2.setVisible(false);
                            lblF2.setVisible(true);
                        }
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "No Boat Found!");
                    
                    cbA1.setVisible(false);
                    lblA1.setVisible(false);
                    cbA2.setVisible(false);
                    lblA2.setVisible(false);
                    cbB1.setVisible(false);
                    lblB1.setVisible(false);
                    cbB2.setVisible(false);
                    lblB2.setVisible(false);
                    cbC1.setVisible(false);
                    lblC1.setVisible(false);
                    cbC2.setVisible(false);
                    lblC2.setVisible(false);
                    cbD1.setVisible(false);
                    lblD1.setVisible(false);
                    cbD2.setVisible(false);
                    lblD2.setVisible(false);
                    cbE1.setVisible(false);
                    lblE1.setVisible(false);
                    cbE2.setVisible(false);
                    lblE2.setVisible(false);
                    cbF1.setVisible(false);
                    lblF1.setVisible(false);
                    cbF2.setVisible(false);
                    lblF2.setVisible(false);
                    
                }
            }
        }
        catch (Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_cmbTimeActionPerformed

    private void cbA1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbA1ActionPerformed
        displayPreBook();
    }//GEN-LAST:event_cbA1ActionPerformed

    private void cbB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbB1ActionPerformed
        displayPreBook();
    }//GEN-LAST:event_cbB1ActionPerformed

    private void cbC1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbC1ActionPerformed
        displayPreBook();
    }//GEN-LAST:event_cbC1ActionPerformed

    private void cbD1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbD1ActionPerformed
       displayPreBook();
    }//GEN-LAST:event_cbD1ActionPerformed

    private void cbE1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbE1ActionPerformed
        displayPreBook();
    }//GEN-LAST:event_cbE1ActionPerformed

    private void cbF1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbF1ActionPerformed
        displayPreBook();
    }//GEN-LAST:event_cbF1ActionPerformed

    private void cbA2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbA2ActionPerformed
        displayPreBook();
    }//GEN-LAST:event_cbA2ActionPerformed

    private void cbB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbB2ActionPerformed
        displayPreBook();
    }//GEN-LAST:event_cbB2ActionPerformed

    private void cbC2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbC2ActionPerformed
        displayPreBook();
    }//GEN-LAST:event_cbC2ActionPerformed

    private void cbD2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbD2ActionPerformed
        displayPreBook();
    }//GEN-LAST:event_cbD2ActionPerformed

    private void cbE2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbE2ActionPerformed
        displayPreBook();
    }//GEN-LAST:event_cbE2ActionPerformed

    private void cbF2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbF2ActionPerformed
        displayPreBook();
    }//GEN-LAST:event_cbF2ActionPerformed

    private void btnPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaymentActionPerformed
        
        int pack = calcPack();
        verifyForm();
        if(errorName == false && errorAddress == false && errorPhone == false && errorEmail == false && errorICNumber == false && errorDate == false && errorMonth == false && errorYear == false && errorTime == false && errorSeat == false)
        {
            try
            {
                double payment = 0.0;
                String inputPayment = JOptionPane.showInputDialog(null, "Please Enter Payment RM:");
                payment = Double.parseDouble(inputPayment);
                int packNum = calcPack();
                String arrSeat = seatNumberArray(packNum);

                double check = payment - totalPayment;

                if(check < 0)
                {
                    JOptionPane.showMessageDialog(null, "Insufficient Amount!");
                }
                else
                {
                    String custID = randomString();
                    try
                    {
                        Class.forName("com.mysql.jdbc.Driver");
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/islandhopping","root","");

                        String sql = "INSERT INTO customer(custID, custICNum, custName, custAddress, custPhone, custEmail) VALUES (?, ?, ?, ?, ?, ?)";
                        PreparedStatement query = con.prepareStatement(sql);
                        query.setString(1, custID);
                        query.setString(2, icNum);
                        query.setString(3, name);
                        query.setString(4, address);
                        query.setString(5, phone);
                        query.setString(6, email);

                        query.execute();

                        String sql1 = "INSERT INTO reservation(revSeat, revDate, revTime, custID, boatID) VALUES (?, ?, ?, ?, ?)";
                        PreparedStatement query1 = con.prepareStatement(sql1);
                        query1.setString(1, arrSeat);
                        query1.setString(2, date + " " + month + " " + year);
                        query1.setString(3, time);
                        query1.setString(4, custID);
                        query1.setString(5, boatID);

                        query1.execute();

                        Statement stmt = con.createStatement();
                        ResultSet rs = stmt.executeQuery("SELECT * FROM reservation WHERE custID = '" + custID + "'");

                        while(rs.next())
                        {
                            revID = rs.getString(1);
                        }

                        String sql2 = "INSERT INTO payment(reservationID, total) VALUES (?, ?)";
                        PreparedStatement query2 = con.prepareStatement(sql2);
                        query2.setString(1, revID);
                        query2.setDouble(2, totalPayment);

                        query2.execute();

                        String seatArray = seatNumberArray(pack);
                        String[] arrSeatNum = seatArray.split(",");
                        StringBuilder seatUpdate = new StringBuilder();

                        for (int a = 0; a < arrSeatNum.length; a++) 
                        {
                            seatUpdate.append(arrSeatNum[a]);
                            seatUpdate.append("='1' ");

                            if(a != arrSeatNum.length-1)
                            {
                                seatUpdate.append(",");
                            }
                        }
                        seatUpdate.toString();

                        String sql3 = "UPDATE seat SET " + seatUpdate + "WHERE seatID = '" + seatID + "'";
                        PreparedStatement query3 = con.prepareStatement(sql3);

                        query3.execute();

                        con.close();
                        printReceipt();

                        JOptionPane.showMessageDialog(null, "Your Balance is RM " + check);
                        JOptionPane.showMessageDialog(null, "Thank You and Please Come Again");  
                        backToMain();
                    }
                    catch (HeadlessException | ClassNotFoundException | SQLException e)
                    {
                        System.out.println(e);
                    }
                }
            }
            catch (NumberFormatException e)
            {
                JOptionPane.showMessageDialog(null, "Only Number is Allow!");
            }
        }
    }//GEN-LAST:event_btnPaymentActionPerformed

    public void verifyForm()
    {
        errorName = false;
        errorAddress = false;
        errorPhone = false;
        errorEmail = false;
        errorICNumber = false;
        errorSeat = false;
        errorDate = false;
        errorMonth = false;
        errorYear = false;
        errorTime = false;
        int pack = calcPack();
        
        if(txtName.getText().equalsIgnoreCase(""))
        {
            JOptionPane.showMessageDialog(null, "Please Fill Name!");
            errorName = true;
        }
        if(txtAddress.getText().equalsIgnoreCase(""))
        {
            JOptionPane.showMessageDialog(null, "Please Fill Address!");
            errorAddress = true;
        }
        if(txtPhone.getText().equalsIgnoreCase(""))
        {
            JOptionPane.showMessageDialog(null, "Please Fill Phone Number!");
            errorPhone = true;
        }
        if(txtEmail.getText().equalsIgnoreCase(""))
        {
            JOptionPane.showMessageDialog(null, "Please Fill Email!");
            errorEmail = true;
        }
        if(txtIDNum.getText().equalsIgnoreCase(""))
        {
            JOptionPane.showMessageDialog(null, "Please Fill IC Number!");
            errorICNumber = true;
        }
        if(cmbDate.getSelectedItem().toString().equalsIgnoreCase("Date"))
        {
            JOptionPane.showMessageDialog(null, "Please Select Date!");
            errorDate = true;
        }
        if(cmbMonth.getSelectedItem().toString().equalsIgnoreCase("Month"))
        {
            JOptionPane.showMessageDialog(null, "Please Select Month!");
            errorMonth = true;
        }
        if(cmbYear.getSelectedItem().toString().equalsIgnoreCase("Year"))
        {
            JOptionPane.showMessageDialog(null, "Please Select Year!");
            errorYear = true;
        }
        if(cmbTime.getSelectedItem().toString().equalsIgnoreCase("Hour"))
        {
            JOptionPane.showMessageDialog(null, "Please Select Time!");
            errorTime = true;
        }
        if(pack == 0)
        {
            JOptionPane.showMessageDialog(null, "Please Select Seat!");
            errorSeat = true;
        }
    }
    
    public void checkForm()
    {
        errorName = false;
        errorAddress = false;
        errorPhone = false;
        errorEmail = false;
        errorICNumber = false;
        errorSeat = false;
        errorDate = false;
        errorMonth = false;
        errorYear = false;
        errorTime = false;
        
        if(txtName.getText().equalsIgnoreCase(""))
        {
            errorName = true;
        }
        if(txtAddress.getText().equalsIgnoreCase(""))
        {
            errorAddress = true;
        }
        if(txtPhone.getText().equalsIgnoreCase(""))
        {
            errorPhone = true;
        }
        if(txtEmail.getText().equalsIgnoreCase(""))
        {
            errorEmail = true;
        }
        if(txtIDNum.getText().equalsIgnoreCase(""))
        {
            errorICNumber = true;
        }
        if(cmbDate.getSelectedItem().toString().equalsIgnoreCase("Date"))
        {
            errorDate = true;
        }
        if(cmbMonth.getSelectedItem().toString().equalsIgnoreCase("Month"))
        {
            errorMonth = true;
        }
        if(cmbYear.getSelectedItem().toString().equalsIgnoreCase("Year"))
        {
            errorYear = true;
        }
        if(cmbTime.getSelectedItem().toString().equalsIgnoreCase("Hour"))
        {
            errorTime = true;
        }
    }
    
    public void backToMain()
    {
        dispose();
        mainMenu main = new mainMenu();
        main.setVisible(true);
        main.setLocationRelativeTo(null);
    }
    
    public String randomString()
    {
        String random = Long.toHexString(Double.doubleToLongBits(Math.random())).toUpperCase();
        return random;
    }
    
    public void printReceipt()
    {
        try(PrintWriter ticket = new PrintWriter(new BufferedWriter( new FileWriter("Ticket.txt"))))
        {
            
            ticket.println("=== Pulau Langkawi Island Hopping ===");
            ticket.println("               Ticket                ");
            ticket.println("Ticket Number: " + revID);
            ticket.println("Customer Name: " + name);
            ticket.println("Seat Number  : " + seatNumberArray(calcPack()));
            ticket.println("Date         : " +newDate+ "\tTime: " + time);
            ticket.println("Boat Series  : " + boatSeries);
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(reservationMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void clearCheckSeat()
    {
        cbA1.setSelected(false);
        cbA2.setSelected(false);
        cbB1.setSelected(false);
        cbB2.setSelected(false);
        cbC1.setSelected(false);
        cbC2.setSelected(false);
        cbD1.setSelected(false);
        cbD2.setSelected(false);
        cbE1.setSelected(false);
        cbE2.setSelected(false);
        cbF1.setSelected(false);
        cbF2.setSelected(false);
    }
    
    public int calcPack()
    {   
        int count = 0;
        
        if(cbA1.isSelected())
        {
            count++;
        }
        if(cbA2.isSelected())
        {
            count++;
        }
        if(cbB1.isSelected())
        {
            count++;
        }
        if(cbB2.isSelected())
        {
            count++;
        }
        if(cbC1.isSelected())
        {
            count++;
        }
        if(cbC2.isSelected())
        {
            count++;
        }
        if(cbD1.isSelected())
        {
            count++;
        }
        if(cbD2.isSelected())
        {
            count++;
        }
        if(cbE1.isSelected())
        {
            count++;
        }
        if(cbE2.isSelected())
        {
            count++;
        }
        if(cbF1.isSelected())
        {
            count++;
        }
        if(cbF2.isSelected())
        {
            count++;
        }
        
        return count;
    }
    
    public String seatNumberArray(int calcPack)
    {
        int pack = calcPack;
        String[] seat = new String[pack];
        int x = 0;
        
        if(cbA1.isSelected())
        {
            seat[x] = "A1";
            x++;
        }
        if(cbA2.isSelected())
        {
            seat[x] = "A2";
            x++;
        }
        if(cbB1.isSelected())
        {
            seat[x] = "B1";
            x++;
        }
        if(cbB2.isSelected())
        {
            seat[x] = "B2";
            x++;
        }
        if(cbC1.isSelected())
        {
            seat[x] = "C1";
            x++;
        }
        if(cbC2.isSelected())
        {
            seat[x] = "C2";
            x++;
        }
        if(cbD1.isSelected())
        {
            seat[x] = "D1";
            x++;
        }
        if(cbD2.isSelected())
        {
            seat[x] = "D2";
            x++;
        }
        if(cbE1.isSelected())
        {
            seat[x] = "E1";
            x++;
        }
        if(cbE2.isSelected())
        {
            seat[x] = "E2";
            x++;
        }
        if(cbF1.isSelected())
        {
            seat[x] = "F1";
            x++;
        }
        if(cbF2.isSelected())
        {
            seat[x] = "F2";
            x++;
        }
        
        StringBuilder buildSeat = new StringBuilder();
        for (int y = 0; y < pack; y++) 
        {
            buildSeat.append(seat[y]);
            if(y != pack-1)
            {
                buildSeat.append(",");
            }
        }
        String arrSeat = buildSeat.toString();
        
        return arrSeat;
    }
    
    public void displayPreBook()
    {
        checkForm();
        
        if(errorName == false && errorAddress == false && errorPhone == false && errorEmail == false && errorICNumber == false && errorDate == false && errorMonth == false && errorYear == false && errorTime == false && errorSeat == false)
        {
            int pack = calcPack();
            Customer cust = new Customer(name, address, phone, email, icNum, newDate, time, pack);
            totalPayment = cust.calcPrice();
            String print = cust.toString();
            String print2 = seatNumberArray(pack);
            lblDisplay.setText(print);
            lblDisplaySeat.setText("Seat Selected: " + print2);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please Fill Up The Form!");
            clearCheckSeat();
        }

    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(reservationMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(reservationMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(reservationMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(reservationMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new reservationMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnPayment;
    private javax.swing.JCheckBox cbA1;
    private javax.swing.JCheckBox cbA2;
    private javax.swing.JCheckBox cbB1;
    private javax.swing.JCheckBox cbB2;
    private javax.swing.JCheckBox cbC1;
    private javax.swing.JCheckBox cbC2;
    private javax.swing.JCheckBox cbD1;
    private javax.swing.JCheckBox cbD2;
    private javax.swing.JCheckBox cbE1;
    private javax.swing.JCheckBox cbE2;
    private javax.swing.JCheckBox cbF1;
    private javax.swing.JCheckBox cbF2;
    private javax.swing.JComboBox<String> cmbDate;
    private javax.swing.JComboBox<String> cmbMonth;
    private javax.swing.JComboBox<String> cmbTime;
    private javax.swing.JComboBox<String> cmbYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblA1;
    private javax.swing.JLabel lblA2;
    private javax.swing.JLabel lblB1;
    private javax.swing.JLabel lblB2;
    private javax.swing.JLabel lblC1;
    private javax.swing.JLabel lblC2;
    private javax.swing.JLabel lblD1;
    private javax.swing.JLabel lblD2;
    private javax.swing.JLabel lblDisplay;
    private javax.swing.JLabel lblDisplaySeat;
    private javax.swing.JLabel lblE1;
    private javax.swing.JLabel lblE2;
    private javax.swing.JLabel lblF1;
    private javax.swing.JLabel lblF2;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtIDNum;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
